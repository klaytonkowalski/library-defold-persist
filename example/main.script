--------------------------------------------------------------------------------
-- License
--------------------------------------------------------------------------------

-- Copyright (c) 2024 Klayton Kowalski

-- This software is provided 'as-is', without any express or implied warranty.
-- In no event will the authors be held liable for any damages arising from the use of this software.

-- Permission is granted to anyone to use this software for any purpose,
-- including commercial applications, and to alter it and redistribute it freely,
-- subject to the following restrictions:

-- 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software.
--    If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required.

-- 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software.

-- 3. This notice may not be removed or altered from any source distribution.

--------------------------------------------------------------------------------
-- Information
--------------------------------------------------------------------------------

-- GitHub: https://github.com/whiteboxdev/library-defold-persist

--------------------------------------------------------------------------------
-- Dependencies
--------------------------------------------------------------------------------

local persist = require "persist.persist"

--------------------------------------------------------------------------------
-- Constants
--------------------------------------------------------------------------------

local message_acquire_input_focus = hash("acquire_input_focus")

local mouse_button_left = hash("mouse_button_left")

local go_label = hash("/label")

--------------------------------------------------------------------------------
-- Variables
--------------------------------------------------------------------------------

-- Amount of times the player clicked on the window.
local click_count

--------------------------------------------------------------------------------
-- Engine Functions
--------------------------------------------------------------------------------

function init()
	msg.post(msg.url(), message_acquire_input_focus)
	-- For simplicity, the profile file only contains the most recent click count.
	-- If the file already exists, then do not overwrite its data.
	local profile_data =
	{
		click_count = 0
	}
	persist.create("profile.json", profile_data, false)
	-- Load the click count.
	click_count = persist.load("profile.json").click_count
	label.set_text(msg.url(nil, go_label, "label"), click_count)
end

function final()
	-- On application shutdown, write the updated click count to the file, then save the changes.
	persist.write("profile.json", "click_count", click_count)
	persist.save("profile.json")
end

function on_input(self, action_id, action)
	if action.pressed then
		-- If the left mouse button is pressed, then increment the click count.
		if action_id == mouse_button_left then
			click_count = click_count + 1
			label.set_text(msg.url(nil, go_label, "label"), click_count)
		end
	end
end